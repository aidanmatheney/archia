/* Generated by restful-react */

import React from "react";
import { Get, GetProps, useGet, UseGetProps, Mutate, MutateProps, useMutate, UseMutateProps } from "restful-react";

export type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;

export interface Patient {
  id?: number;
  firstName?: string | null;
  middleName?: string | null;
  lastName?: string | null;
}

export type CreatePatientProps = Omit<MutateProps<number, unknown, void, Patient>, "path" | "verb">;

/**
 * Create a new patient.
 */
export const CreatePatient = (props: CreatePatientProps) => (
  <Mutate<number, unknown, void, Patient>
    verb="POST"
    path={`/api/Patient`}
    {...props}
  />
);

export type UseCreatePatientProps = Omit<UseMutateProps<number, void, Patient>, "path" | "verb">;

/**
 * Create a new patient.
 */
export const useCreatePatient = (props: UseCreatePatientProps) => useMutate<number, unknown, void, Patient>("POST", `/api/Patient`, props);


export type GetPatientsProps = Omit<GetProps<Patient[], unknown, void>, "path">;

/**
 * Get all patients.
 */
export const GetPatients = (props: GetPatientsProps) => (
  <Get<Patient[], unknown, void>
    path={`/api/Patient`}
    {...props}
  />
);

export type UseGetPatientsProps = Omit<UseGetProps<Patient[], void>, "path">;

/**
 * Get all patients.
 */
export const useGetPatients = (props: UseGetPatientsProps) => useGet<Patient[], unknown, void>(`/api/Patient`, props);


export interface DeletePatientQueryParams {
  id?: number;
}

export type DeletePatientProps = Omit<MutateProps<void, unknown, DeletePatientQueryParams, void>, "path" | "verb">;

/**
 * Delete a patient by ID.
 */
export const DeletePatient = (props: DeletePatientProps) => (
  <Mutate<void, unknown, DeletePatientQueryParams, void>
    verb="DELETE"
    path={`/api/Patient`}
    {...props}
  />
);

export type UseDeletePatientProps = Omit<UseMutateProps<void, DeletePatientQueryParams, void>, "path" | "verb">;

/**
 * Delete a patient by ID.
 */
export const useDeletePatient = (props: UseDeletePatientProps) => useMutate<void, unknown, DeletePatientQueryParams, void>("DELETE", `/api/Patient`, props);


export type GetPatientProps = Omit<GetProps<Patient, unknown, void>, "path"> & {id: number};

/**
 * Get a patient by ID.
 */
export const GetPatient = ({id, ...props}: GetPatientProps) => (
  <Get<Patient, unknown, void>
    path={`/api/Patient/${id}`}
    {...props}
  />
);

export type UseGetPatientProps = Omit<UseGetProps<Patient, void>, "path"> & {id: number};

/**
 * Get a patient by ID.
 */
export const useGetPatient = ({id, ...props}: UseGetPatientProps) => useGet<Patient, unknown, void>(`/api/Patient/${id}`, props);


export type UpdatePatientProps = Omit<MutateProps<void, unknown, void, Patient>, "path" | "verb"> & {id: number};

/**
 * Update a patient by ID
 */
export const UpdatePatient = ({id, ...props}: UpdatePatientProps) => (
  <Mutate<void, unknown, void, Patient>
    verb="PUT"
    path={`/api/Patient/${id}`}
    {...props}
  />
);

export type UseUpdatePatientProps = Omit<UseMutateProps<void, void, Patient>, "path" | "verb"> & {id: number};

/**
 * Update a patient by ID
 */
export const useUpdatePatient = ({id, ...props}: UseUpdatePatientProps) => useMutate<void, unknown, void, Patient>("PUT", `/api/Patient/${id}`, props);

